[%- operation = c.result_for_operation(op_name) %]
[%- shape = c.result_for_operation(op_name) %]
[%- IF (shape) %]
package [% c.api %]::[% c.shapename_for_operation_output(op_name) %];
  use Moose;
[% FOREACH param_name IN shape.members.keys.sort -%]
  [%- member = c.shape(shape.members.$param_name.shape) -%]
  has [% param_name %] => (is => 'ro', isa => '[% member.perl_type %]'
  [%- IF (shape.members.$param_name.locationName) %]
    [%- IF (shape.members.$param_name.location == 'header') %], traits => ['ParamInHeader'], header_name => '[% shape.members.$param_name.locationName -%]'
    [%- ELSIF (shape.members.$param_name.location == 'querystring') %], traits => ['ParamInQuery'], query_name => '[% shape.members.$param_name.locationName -%]' 
    [%- ELSIF (shape.members.$param_name.location == 'uri') %], traits => ['ParamInURI'], uri_name => '[% shape.members.$param_name.locationName -%]' 
    [%- ELSE %], traits => ['NameInRequest'], request_name => '[% shape.members.$param_name.locationName %]'[%- END -%][%- END -%]
  [%- IF (shape.members.$param_name.streaming == 1) %], traits => ['ParamInBody'][% stream_param = param_name %][% END %]
  [%- IF (c.required_in_shape(shape,param_name)) %], required => 1[% END %]);
[% END %]
  [%- # Check if the payload member has streaming=1 (binary/blob data)
      # Don't add _stream_param for regular JSON payloads like Pinpoint
  -%]
  [%- IF (shape.payload) -%]
    [%- payload_member = shape.members.item(shape.payload) -%]
    [%- IF (payload_member.streaming == 1) -%]
  use MooseX::ClassAttribute;
  class_has _stream_param => (is => 'ro', default => '[% shape.payload %]');
    [%- END -%]
  [%- END %]
  has _request_id => (is => 'ro', isa => 'Str');
[%- END %]
1;

[% INCLUDE 'class_documentation.tt' %]
